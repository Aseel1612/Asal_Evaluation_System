{"uid":"6ca7e3e73fba9bb6","name":"test_view_closed_evaluation_by_date","fullName":"tests.test_employee.test_EmployeeEvaluationHistory#test_view_closed_evaluation_by_date","historyId":"16302c085ad8a3cb6c4bc3a970bae3a3","time":{"start":1710589655223,"stop":1710589655223,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=122.0.6261.111)\nStacktrace:\n#0 0x5f1137c98f33 <unknown>\n#1 0x5f1137990ce6 <unknown>\n#2 0x5f1137988d03 <unknown>\n#3 0x5f1137978ceb <unknown>\n#4 0x5f113797a145 <unknown>\n#5 0x5f1137979005 <unknown>\n#6 0x5f1137977f09 <unknown>\n#7 0x5f1137977db3 <unknown>\n#8 0x5f1137976814 <unknown>\n#9 0x5f1137976daa <unknown>\n#10 0x5f113799349e <unknown>\n#11 0x5f1137a1d445 <unknown>\n#12 0x5f11379fdeb2 <unknown>\n#13 0x5f1137a1c899 <unknown>\n#14 0x5f11379fdc53 <unknown>\n#15 0x5f11379cedb3 <unknown>\n#16 0x5f11379cf77e <unknown>\n#17 0x5f1137c5e86b <unknown>\n#18 0x5f1137c62885 <unknown>\n#19 0x5f1137c4c181 <unknown>\n#20 0x5f1137c63412 <unknown>\n#21 0x5f1137c3025f <unknown>\n#22 0x5f1137c87528 <unknown>\n#23 0x5f1137c87723 <unknown>\n#24 0x5f1137c980e4 <unknown>\n#25 0x7342d3a94ac3 <unknown>","statusTrace":"base_config = {'baseUrl': 'http://172.22.1.141:8089/'}\nemployee_config = {'browserType': 'chrome', 'invalid_credentials': {'password': 'hgukk', 'username': 'aaaaa'}, 'valid_credentials': {'EmployeeName': 'test employee3', 'password': '45622', 'username': 'test-employee3'}}\n\n    @pytest.fixture(scope='function')\n    def employee_browser(base_config, employee_config):\n        browser_type = employee_config['browserType']\n        browser = DriverFactory.get_driver(browser_type.lower(), headless=True)\n>       browser.get(base_config['baseUrl'])\n\nconftest.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x79f686941070>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_TIMED_OUT\\\\n...\\\\n#23 0x5f1137c87723 \\\\u003Cunknown>\\\\n#24 0x5f1137c980e4 \\\\u003Cunknown>\\\\n#25 0x7342d3a94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\nE         (Session info: chrome-headless-shell=122.0.6261.111)\nE       Stacktrace:\nE       #0 0x5f1137c98f33 <unknown>\nE       #1 0x5f1137990ce6 <unknown>\nE       #2 0x5f1137988d03 <unknown>\nE       #3 0x5f1137978ceb <unknown>\nE       #4 0x5f113797a145 <unknown>\nE       #5 0x5f1137979005 <unknown>\nE       #6 0x5f1137977f09 <unknown>\nE       #7 0x5f1137977db3 <unknown>\nE       #8 0x5f1137976814 <unknown>\nE       #9 0x5f1137976daa <unknown>\nE       #10 0x5f113799349e <unknown>\nE       #11 0x5f1137a1d445 <unknown>\nE       #12 0x5f11379fdeb2 <unknown>\nE       #13 0x5f1137a1c899 <unknown>\nE       #14 0x5f11379fdc53 <unknown>\nE       #15 0x5f11379cedb3 <unknown>\nE       #16 0x5f11379cf77e <unknown>\nE       #17 0x5f1137c5e86b <unknown>\nE       #18 0x5f1137c62885 <unknown>\nE       #19 0x5f1137c4c181 <unknown>\nE       #20 0x5f1137c63412 <unknown>\nE       #21 0x5f1137c3025f <unknown>\nE       #22 0x5f1137c87528 <unknown>\nE       #23 0x5f1137c87723 <unknown>\nE       #24 0x5f1137c980e4 <unknown>\nE       #25 0x7342d3a94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"employee_config","time":{"start":1710587377068,"stop":1710587377068,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_config","time":{"start":1710587377068,"stop":1710587377069,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"employee_browser","time":{"start":1710589655223,"stop":1710589790359,"duration":135136},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=122.0.6261.111)\nStacktrace:\n#0 0x5f1137c98f33 <unknown>\n#1 0x5f1137990ce6 <unknown>\n#2 0x5f1137988d03 <unknown>\n#3 0x5f1137978ceb <unknown>\n#4 0x5f113797a145 <unknown>\n#5 0x5f1137979005 <unknown>\n#6 0x5f1137977f09 <unknown>\n#7 0x5f1137977db3 <unknown>\n#8 0x5f1137976814 <unknown>\n#9 0x5f1137976daa <unknown>\n#10 0x5f113799349e <unknown>\n#11 0x5f1137a1d445 <unknown>\n#12 0x5f11379fdeb2 <unknown>\n#13 0x5f1137a1c899 <unknown>\n#14 0x5f11379fdc53 <unknown>\n#15 0x5f11379cedb3 <unknown>\n#16 0x5f11379cf77e <unknown>\n#17 0x5f1137c5e86b <unknown>\n#18 0x5f1137c62885 <unknown>\n#19 0x5f1137c4c181 <unknown>\n#20 0x5f1137c63412 <unknown>\n#21 0x5f1137c3025f <unknown>\n#22 0x5f1137c87528 <unknown>\n#23 0x5f1137c87723 <unknown>\n#24 0x5f1137c980e4 <unknown>\n#25 0x7342d3a94ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 166, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 102, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 910, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Asal_Evaluation_System/Asal_Evaluation_System/conftest.py\", line 44, in employee_browser\n    browser.get(base_config['baseUrl'])\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 356, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests.test_employee"},{"name":"suite","value":"test_EmployeeEvaluationHistory"},{"name":"host","value":"fv-az1456-645"},{"name":"thread","value":"1951-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_employee.test_EmployeeEvaluationHistory"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"6ca7e3e73fba9bb6.json","parameterValues":[]}